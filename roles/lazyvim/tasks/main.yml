---

- block:
   - name: install lazyvim from repository
     ansible.builtin.git:
      repo: "{{ lazyvim_repo }}"
      dest: ~/.config/nvim
      single_branch: 'yes'
      version: main
      force: yes
     tags:
      - lazyvim
  become: false
  become_user: "{{ local_username }}"


# options.lua
- block:
  - name: check options.lua exists
    ansible.builtin.stat:
     path: "~{{local_username}}/.config/nvim/lua/config/options.lua"
    register: optionsdotlua

  - name: backup options.lua if it exists
    ansible.builtin.copy:
     src: "~{{local_username}}/.config/nvim/lua/config/options.lua"
     dest: "~{{local_username}}/.config/nvim/lua/config/options.lua.orig"
    when: optionsdotlua.stat.exists

  - name: copy the options.lua to nvim config folder
    ansible.builtin.copy:
      src: lua/config/options.lua
      dest: "~{{local_username}}/.config/nvim/lua/config/options.lua"
      force: yes
  become: false
  become_user: "{{ local_username }}"

# lazy.lua
- block:
  - name: check lazy.lua exists
    ansible.builtin.stat:
     path: "~{{local_username}}/.config/nvim/lua/config/lazy.lua"
    register: lazydotlua

  - name: backup lazy.lua if it exists
    ansible.builtin.copy:
     src: "~{{local_username}}/.config/nvim/lua/config/lazy.lua"
     dest: "~{{local_username}}/.config/nvim/lua/config/lazy.lua.orig"
    when: lazydotlua.stat.exists

  - name: copy the lazy.lua to nvim config folder
    ansible.builtin.copy:
      src: lua/config/lazy.lua
      dest: "~{{local_username}}/.config/nvim/lua/config/lazy.lua"
      force: yes
  become: false
  become_user: "{{ local_username }}"

# keymaps.lua
- block:
  - name: check keymaps.lua exists
    ansible.builtin.stat:
     path: "~{{local_username}}/.config/nvim/lua/config/keymaps.lua"
    register: keymapsdotlua

  - name: backup keymaps.lua if it exists
    ansible.builtin.copy:
     src: "~{{local_username}}/.config/nvim/lua/config/keymaps.lua"
     dest: "~{{local_username}}/.config/nvim/lua/config/keymaps.lua.orig"
    when: keymapsdotlua.stat.exists

  - name: copy the keymaps.lua to nvim config folder
    ansible.builtin.copy:
      src: lua/config/keymaps.lua
      dest: "~{{local_username}}/.config/nvim/lua/config/keymaps.lua"
      force: yes
  become: false
  become_user: "{{ local_username }}"


# colorscheme.lua
- block:
  - name: check colorscheme plugin exists
    ansible.builtin.stat:
     path: "~{{local_username}}/.config/nvim/lua/plugins/colorscheme.lua"
    register: colorschemedotlua

  - name: backup colorscheme.lua if it exists
    ansible.builtin.copy:
     src: "~{{local_username}}/.config/nvim/lua/plugins/colorscheme.lua"
     dest: "~{{local_username}}/.config/nvim/lua/plugins/colorscheme.lua.orig"
    when: colorschemedotlua.stat.exists

  - name: copy the colorscheme.lua to nvim plugins folder
    ansible.builtin.copy:
      src: lua/plugins/colorscheme.lua
      dest: "~{{local_username}}/.config/nvim/lua/plugins/colorscheme.lua"
      force: yes
  become: false
  become_user: "{{ local_username }}"

# nvim-soil.lua
- block:
  - name: check nvim-soil plugin exists
    ansible.builtin.stat:
     path: "~{{local_username}}/.config/nvim/lua/plugins/nvim-soil.lua"
    register: nvimsoildotlua

  - name: backup nvimsoil.lua if it exists
    ansible.builtin.copy:
     src: "~{{local_username}}/.config/nvim/lua/plugins/nvim-soil.lua"
     dest: "~{{local_username}}/.config/nvim/lua/plugins/nvim-soil.lua.orig"
    when: nvimsoildotlua.stat.exists

  - name: copy the nvim-soil.lua to nvim plugins folder
    ansible.builtin.copy:
      src: lua/plugins/nvim-soil.lua
      dest: "~{{local_username}}/.config/nvim/lua/plugins/nvim-soil.lua"
      force: yes
  become: false
  become_user: "{{ local_username }}"





